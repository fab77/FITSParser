{"version":3,"file":"jsfitsio.min.js","mappings":"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","sources":["webpack://jsfitsio/webpack/universalModuleDefinition","webpack://jsfitsio/webpack/runtime/load script","webpack://jsfitsio/webpack/bootstrap","webpack://jsfitsio/webpack/runtime/compat get default export","webpack://jsfitsio/webpack/runtime/define property getters","webpack://jsfitsio/webpack/runtime/ensure chunk","webpack://jsfitsio/webpack/runtime/get javascript chunk filename","webpack://jsfitsio/webpack/runtime/global","webpack://jsfitsio/webpack/runtime/hasOwnProperty shorthand","webpack://jsfitsio/webpack/runtime/make namespace object","webpack://jsfitsio/webpack/runtime/publicPath","webpack://jsfitsio/webpack/runtime/jsonp chunk loading","webpack://jsfitsio/./src/model/FITSHeaderItem.ts","webpack://jsfitsio/./src/model/FITSHeader.ts","webpack://jsfitsio/./src/ParseUtils.ts","webpack://jsfitsio/./src/FITSWriter.ts","webpack://jsfitsio/./src/ParsePayload.ts","webpack://jsfitsio/./src/ParseHeader.ts","webpack://jsfitsio/./src/FITSParser.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"jsfitsio\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jsfitsio\"] = factory();\n\telse\n\t\troot[\"jsfitsio\"] = factory();\n})(self, () => {\nreturn ","var inProgress = {};\nvar dataWebpackPrefix = \"jsfitsio:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js?h=\" + {\"483\":\"932b8edb3934c3fab8eb\",\"646\":\"e403ea1ed6c03ed1da2d\"}[chunkId] + \"\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t924: 0,\n\t202: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkjsfitsio\"] = self[\"webpackChunkjsfitsio\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","/**\n * Summary. (bla bla bla)\n *\n * Description. (bla bla bla)\n *\n * @link   github https://github.com/fab77/FITSParser\n * @author Fabrizio Giordano <fabriziogiordano77@gmail.com>\n */\n\nexport class FITSHeaderItem {\n  _key: string | undefined;\n  _value: string | number | undefined;\n  _comment: string | undefined;\n\n  constructor(key?: string, value?: string | number, comment?: string) {\n    this._key = key !== undefined ? key : undefined;\n    this._value = value !== undefined ? value : undefined;\n    this._comment = comment !== undefined ? comment : undefined;\n  }\n\n  get key() {\n    return this._key;\n  }\n\n  get comment() {\n    return this._comment;\n  }\n\n  get value() {\n    return this._value;\n  }\n}\n","import { FITSHeaderItem } from \"./FITSHeaderItem.js\";\n\n/**\n * Summary. (bla bla bla)\n *\n * Description. (bla bla bla)\n *\n * @link   github https://github.com/fab77/FITSParser\n * @author Fabrizio Giordano <fabriziogiordano77@gmail.com>\n */\n\n// reference FTIS standard doc https://heasarc.gsfc.nasa.gov/docs/fcg/standard_dict.html\n\nexport class FITSHeader extends Map {\n  _offset: number | undefined;\n  _items: FITSHeaderItem[];\n\n  constructor() {\n    super();\n    this._offset = undefined;\n    this._items = [];\n  }\n\n  set offset(offset) {\n    this._offset = offset;\n  }\n\n  get offset() {\n    return this._offset;\n  }\n\n  getItemList() {\n    return this._items;\n  }\n\n  getItemListOf(key: string) {\n    const res = [];\n    for (let i = 0; i < this._items.length; i++) {\n      const item = this._items[i];\n      if (item.key == key) {\n        res.push(item);\n      }\n    }\n    return res;\n  }\n\n  addItemAtTheBeginning(item: FITSHeaderItem) {\n    if (item.key !== undefined) {\n      if (\n        [\n          \"SIMPLE\",\n          \"BITPIX\",\n          \"NAXIS\",\n          \"NAXIS1\",\n          \"NAXIS2\",\n          \"BLANK\",\n          \"BZERO\",\n          \"BSCALE\",\n          \"DATAMIN\",\n          \"DATAMAX\",\n          \"NPIX\",\n          \"ORDER\",\n          \"CRPIX1\",\n          \"CRPIX2\",\n          \"CDELT1\",\n          \"CDELT2\",\n          \"CRVAL1\",\n          \"CRVAL2\",\n        ].includes(item.key)\n      ) {\n        this.set(item.key, item.value);\n      }\n    }\n    \n    const newitemlist = [item].concat(this._items);\n    this._items = newitemlist;\n  }\n\n\n\n  addItem(item: FITSHeaderItem) {\n    if (item.key !== undefined) {\n      if (\n        [\n          \"SIMPLE\",\n          \"BITPIX\",\n          \"NAXIS\",\n          \"NAXIS1\",\n          \"NAXIS2\",\n          \"BLANK\",\n          \"BZERO\",\n          \"BSCALE\",\n          \"DATAMIN\",\n          \"DATAMAX\",\n          \"NPIX\",\n          \"ORDER\",\n          \"CRPIX1\",\n          \"CRPIX2\",\n          \"CDELT1\",\n          \"CDELT2\",\n          \"CRVAL1\",\n          \"CRVAL2\",\n        ].includes(item.key)\n      ) {\n        this.set(item.key, item.value);\n      }\n    }\n    this._items.push(item);\n  }\n\n  getNumRows() {\n    return this._items.length;\n  }\n}\n","/**\n * Summary. (bla bla bla)\n *\n * Description. (bla bla bla)\n *\n * @link   github https://github.com/fab77/FITSParser\n * @author Fabrizio Giordano <fabriziogiordano77@gmail.com>\n */\n\nexport class ParseUtils {\n  static getStringAt(data: string, offset: number, length: number) {\n    const chars: string[] = [];\n    for (let i = offset, j = 0; i < offset + length; i++, j++) {\n      chars[j] = String.fromCharCode(data.charCodeAt(i) & 0xff);\n    }\n    return chars.join(\"\");\n  }\n\n  static byteString(n: number): string {\n    if (n < 0 || n > 255 || n % 1 !== 0) {\n      throw new Error(n + \" does not fit in a byte\");\n    }\n    return (\"000000000\" + n.toString(2)).substr(-8);\n  }\n\n  static parse32bitSinglePrecisionFloatingPoint(\n    byte1: number,\n    byte2: number,\n    byte3: number,\n    byte4: number\n  ): number {\n    let long = (((((byte1 << 8) + byte2) << 8) + byte3) << 8) + byte4;\n    if (long < 0) long += 4294967296;\n    const float =\n      (1.0 + (long & 0x007fffff) / 0x0800000) *\n      Math.pow(2, ((long & 0x7f800000) >> 23) - 127);\n    return float;\n  }\n\n  static convertBlankToBytes(blank: number, nbytes: number): Uint8Array {\n    let str = Math.abs(blank).toString(2);\n    while (str.length / 8 < nbytes) {\n      str += \"0\";\n    }\n    const buffer = new ArrayBuffer(nbytes);\n    const uint8 = new Uint8Array(buffer);\n    for (let i = 0; i < nbytes; i++) {\n      uint8[i] = parseInt(str.substr(8 * i, 8 * (i + 1)), 2);\n    }\n    return uint8;\n  }\n  /** https://gist.github.com/Manouchehri/f4b41c8272db2d6423fa987e844dd9ac */\n  static parseFloatingPointFormat(\n    bytes: Uint8Array,\n    ebits: number,\n    fbits: number\n  ): number | undefined {\n    // Bytes to bits\n    const bits = [];\n    for (let i = bytes.length; i; i -= 1) {\n      let byte = bytes[i - 1];\n      for (let j = 8; j; j -= 1) {\n        bits.push(byte % 2 ? 1 : 0);\n        byte = byte >> 1;\n      }\n    }\n    bits.reverse();\n    const str = bits.join(\"\");\n    // Unpack sign, exponent, fraction\n    const bias = (1 << (ebits - 1)) - 1;\n    const s = parseInt(str.substring(0, 1), 2) ? -1 : 1;\n    const e = parseInt(str.substring(1, 1 + ebits), 2);\n    const f = parseInt(str.substring(1 + ebits), 2);\n\n    // Produce number\n    if (e === (1 << ebits) - 1) {\n      return f !== 0 ? undefined : s * Infinity;\n    } else if (e > 0) {\n      return s * Math.pow(2, e - bias) * (1 + f / Math.pow(2, fbits));\n    } else if (f !== 0) {\n      return s * Math.pow(2, -(bias - 1)) * (f / Math.pow(2, fbits));\n    } else {\n      return s * 0;\n    }\n  }\n\n  static generate16bit2sComplement(val: number): number {\n    throw new TypeError(\"not implemented yet\" + val);\n  }\n\n  static parse16bit2sComplement(byte1: number, byte2: number): number {\n    const unsigned = (byte1 << 8) | byte2;\n    if (unsigned & 0x8000) {\n      return unsigned | 0xffff0000;\n    } else {\n      return unsigned;\n    }\n  }\n\n  static parse32bit2sComplement(\n    byte1: number,\n    byte2: number,\n    byte3: number,\n    byte4: number\n  ): number {\n    const unsigned = (byte1 << 24) | (byte2 << 16) | (byte3 << 8) | byte4;\n    const s = (unsigned & 0x80000000) >> 31;\n    let res = unsigned & 0xffffffff;\n\n    if (s) {\n      res = (~unsigned & 0xffffffff) + 1;\n      return -1 * res;\n    }\n    return res;\n  }\n\n  /**\n   *\n   * @param {*} data string?\n   * @param {*} offset offset in the data\n   * @returns returns an integer between 0 and 65535 representing the UTF-16 code unit at the given index.\n   */\n  static getByteAt(data: string, offset: number): number {\n    const dataOffset = 0;\n    return data.charCodeAt(offset + dataOffset) & 0xff;\n  }\n\n  static extractPixelValue(\n    offset: number,\n    bytes: Uint8Array,\n    bitpix: number\n  ): number | undefined {\n    let px_val = undefined; // pixel value\n    // let px_val1, px_val2, px_val3, px_val4;\n\n    if (bitpix == 8){\n      px_val = bytes[0]\n    } else if (bitpix == 16) {\n      // 16-bit 2's complement binary integer\n      px_val = ParseUtils.parse16bit2sComplement(\n        bytes[offset],\n        bytes[offset + 1]\n      );\n    } else if (bitpix == 32) {\n      // IEEE 754 half precision (float16) ??\n      px_val = ParseUtils.parse32bit2sComplement(\n        bytes[offset],\n        bytes[offset + 1],\n        bytes[offset + 2],\n        bytes[offset + 3]\n      );\n    } else if (bitpix == -32) {\n      // 32-bit IEEE single-precision floating point\n      // px_val = ParseUtils.parse32bitSinglePrecisionFloatingPoint (this._u8data[offset], this._u8data[offset+1], this._u8data[offset+2], this._u8data[offset+3]);\n      px_val = ParseUtils.parseFloatingPointFormat(\n        bytes.slice(offset, offset + 8),\n        8,\n        23\n      );\n    } else if (bitpix == 64) {\n      // 64-bit 2's complement binary integer\n      throw new Error(\n        \"BITPIX=64 -> 64-bit 2's complement binary integer NOT supported yet.\"\n      );\n    } else if (bitpix == -64) {\n      // 64-bit IEEE double-precision floating point\n      //https://babbage.cs.qc.cuny.edu/ieee-754.old/Decimal.html\n      px_val = ParseUtils.parseFloatingPointFormat(\n        bytes.slice(offset, offset + 8),\n        11,\n        52\n      );\n    }\n\n    return px_val;\n  }\n\n}\n\n// export default ParseUtils;\n","/**\n * Summary. (bla bla bla)\n *\n * Description. (bla bla bla)\n *\n * @link   github https://github.com/fab77/fitsontheweb\n * @author Fabrizio Giordano <fabriziogiordano77@gmail.com>\n * import GnomonicProjection from './GnomonicProjection';\n * BITPIX definition from https://archive.stsci.edu/fits/fits_standard/node39.html\n * and \"Definition of the Flexible Image Transport System (FITS)\" standard document\n * defined by FITS Working Group from the International Astronomical Union\n * http://fits.gsfc.nasa.gov/iaufwg/\n * 8\t8-bit Character or unsigned binary integer\n * 16\t16-bit twos-complement binary integer\n * 32\t32-bit twos-complement binary integer\n * -32\t32-bit IEEE single precision floating point\n * -64\t64-bit IEEE double precision floating point\n *\n */\n// import { Blob } from 'blob-polyfill';\nimport { FITSHeaderItem } from \"./model/FITSHeaderItem.js\";\nimport { ParseUtils } from \"./ParseUtils.js\";\nimport { FITSHeader } from \"./model/FITSHeader.js\";\n// import fs from 'node:fs/promises';\n\nexport class FITSWriter {\n  _headerArray: Uint8Array;\n  _payloadArray: Uint8Array[];\n  _fitsData: Uint8Array;\n\n  constructor() {\n    this._headerArray = new Uint8Array();\n    this._payloadArray = new Array<Uint8Array>();\n    this._fitsData = new Uint8Array();\n  }\n\n  run(header: FITSHeader, rawdata: Uint8Array[]) {\n    this.prepareHeader(header);\n    this._payloadArray = rawdata;\n    this.prepareFITS();\n  }\n\n  prepareHeader(headerDetails: FITSHeader) {\n    const item = new FITSHeaderItem(\"END\");\n    headerDetails.addItem(item);\n\n    let str = \"\";\n    for (let i = 0; i < headerDetails.getItemList().length; i++) {\n      const item: FITSHeaderItem = headerDetails.getItemList()[i];\n      let s = this.formatHeaderLine(item);\n      if (s !== undefined) {\n        str += s;\n      }\n    }\n\n    const strBytelen = new TextEncoder().encode(str).length;\n\n    const nhdu = Math.ceil(strBytelen / 2880);\n    const offset = nhdu * 2880;\n\n    for (let j = 0; j < offset - strBytelen; j++) {\n      str += \" \";\n    }\n\n    const ab = new ArrayBuffer(str.length);\n    // Javascript character occupies 2 16-bit -> reducing it to 1 byte\n    this._headerArray = new Uint8Array(ab);\n    for (let i = 0; i < str.length; i++) {\n      this._headerArray[i] = ParseUtils.getByteAt(str, i);\n    }\n  }\n\n  // formatHeaderLine(item: string | undefined, value: string | number, comment: string) {\n  formatHeaderLine(item: FITSHeaderItem) {\n    let str;\n    let keyword = item.key;\n    let value = item.value;\n    let comment = item.comment;\n\n    if (keyword !== null && keyword !== undefined) {\n      str = keyword;\n\n      if (keyword == \"END\") {\n        for (let j = 80; j > keyword.length; j--) {\n          str += \" \";\n        }\n        return str;\n      }\n\n      if (keyword == \"COMMENT\" || keyword == \"HISTORY\") {\n        for (let i = 0; i < 10 - keyword.length; i++) {\n          str += \" \";\n        }\n        str += value;\n        const len = str.length;\n        for (let j = 80; j > len; j--) {\n          str += \" \";\n        }\n        return str;\n      }\n\n      for (let i = 0; i < 8 - keyword.length; i++) {\n        str += \" \";\n      }\n\n      str += \"= \";\n\n      if (value !== null && value !== undefined) {\n        // value\n        str += value;\n        if (comment !== null && comment !== undefined) {\n          str += comment;\n        }\n        const len = str.length;\n        for (let j = 80; j > len; j--) {\n          str += \" \";\n        }\n      } else {\n        if (comment !== null && comment !== undefined) {\n          str += comment;\n        }\n        const len = str.length;\n        for (let j = 80; j > len; j--) {\n          str += \" \";\n        }\n      }\n    } else {\n      // keyword null\n      str = \"\";\n      for (let j = 0; j < 18; j++) {\n        str += \" \";\n      }\n      if (comment !== null && comment !== undefined) {\n        str += comment;\n        const len = str.length;\n        for (let j = 80; j > len; j--) {\n          str += \" \";\n        }\n      } else {\n        str = \"\";\n        for (let j = 80; j > 0; j--) {\n          str += \" \";\n        }\n      }\n    }\n    return str;\n  }\n\n  prepareFITS() {\n    const bytes = new Uint8Array(\n      this._headerArray.length +\n      this._payloadArray[0].length * this._payloadArray.length\n    );\n\n    bytes.set(this._headerArray, 0);\n    for (let i = 0; i < this._payloadArray.length; i++) {\n      const uint8 = this._payloadArray[i];\n      bytes.set(uint8, this._headerArray.length + i * uint8.length);\n    }\n\n    this._fitsData = bytes;\n  }\n\n  // writeFITS(fileuri: string) {\n  //   // const dirname = path.dirname(fileuri);\n  //   // fs.mkdir(dirname, { recursive: true });\n  //   fs.writeFile(fileuri, this._fitsData);\n  //   // if (fs.existsSync(dirname)) {\n  //   //   fs.writeFileSync(fileuri, this._fitsData);\n  //   // } else {\n  //   //   console.error(dirname + \" doesn't exist\");\n  //   // }\n  // }\n\n  typedArrayToURL(): string {\n    const b = new Blob([this._fitsData], { type: \"application/fits\" });\n    // console.log(`<html><body><img src='${URL.createObjectURL(b)}'</body></html>`);\n    return URL.createObjectURL(b);\n  }\n}\n","// \"use strict\";\n\n/**\n * Summary. (bla bla bla)\n *\n * Description. (bla bla bla)\n *\n * @link   github https://github.com/fab77/FITSParser\n * @author Fabrizio Giordano <fabriziogiordano77@gmail.com>\n */\nimport { FITSHeader } from \"./model/FITSHeader.js\";\nimport { FITSHeaderItem } from \"./model/FITSHeaderItem.js\";\nimport { ParseUtils } from \"./ParseUtils.js\";\n\n// let colorsMap = new Map();\n// colorsMap.set(\"grayscale\",\"grayscale\");\n// colorsMap.set(\"planck\",\"planck\");\n// colorsMap.set(\"eosb\",\"eosb\");\n// colorsMap.set(\"rainbow\",\"rainbow\");\n// colorsMap.set(\"cmb\",\"cmb\");\n// colorsMap.set(\"cubehelix\",\"cubehelix\");\n\nexport class ParsePayload {\n  _u8data: Uint8Array;\n  _BZERO: number | undefined;\n  _BSCALE: number | undefined;\n  _BLANK: number | undefined;\n  _BITPIX: number | undefined;\n  _NAXIS1: number | undefined;\n  _NAXIS2: number | undefined;\n  _DATAMIN: number | undefined;\n  _DATAMAX: number | undefined;\n  _physicalblank: number | undefined;\n\n  constructor(fitsheader: FITSHeader, rawdata: Uint8Array) {\n\n    this._u8data = new Uint8Array();\n    this._BZERO = undefined;\n    this._BSCALE = undefined;\n    this._BLANK = undefined;\n    this._BITPIX = undefined;\n    this._NAXIS1 = undefined;\n    this._NAXIS2 = undefined;\n    this._DATAMIN = undefined;\n    this._DATAMAX = undefined;\n    this._physicalblank = undefined;\n\n    const buffer = rawdata.slice(fitsheader.offset);\n    this._u8data = new Uint8Array(buffer);\n    this.init(fitsheader);\n\n  }\n\n  init(fitsheader: FITSHeader) {\n    this._BZERO = fitsheader.get(\"BZERO\");\n    if (this._BZERO === undefined) {\n      this._BZERO = 0;\n    }\n    this._BSCALE = fitsheader.get(\"BSCALE\");\n    if (this._BSCALE === undefined) {\n      this._BSCALE = 1;\n    }\n    this._BLANK = fitsheader.get(\"BLANK\"); // undefined in case it's not present in the header\n    // this._BLANK_pv = this._BZERO + this._BSCALE * this._BLANK || undefined;\n    this._BITPIX = fitsheader.get(\"BITPIX\");\n    this._NAXIS1 = fitsheader.get(\"NAXIS1\");\n    this._NAXIS2 = fitsheader.get(\"NAXIS2\");\n    this._DATAMIN = fitsheader.get(\"DATAMIN\");\n    this._DATAMAX = fitsheader.get(\"DATAMAX\");\n\n    this._physicalblank = undefined;\n    if (this._DATAMAX === undefined || this._DATAMIN === undefined) {\n      const [min, max] = this.computePhysicalMinAndMax();\n      this._DATAMAX = max;\n      this._DATAMIN = min;\n      const maxitem = new FITSHeaderItem(\n        \"DATAMAX\",\n        max,\n        \" / computed with FITSParser\"\n      );\n      const minitem = new FITSHeaderItem(\n        \"DATAMIN\",\n        min,\n        \" / computed with FITSParser\"\n      );\n      fitsheader.addItem(maxitem);\n      fitsheader.addItem(minitem);\n      // fitsheader.set(\"DATAMAX\", max);\n      // fitsheader.set(\"DATAMIN\", min);\n    }\n    // let item = new FITSHeaderItem(\"END\", null, null);\n    // fitsheader.addItem(item);\n  }\n\n  computePhysicalMinAndMax(): [number | undefined, number | undefined] {\n    let i = 0;\n    if (this._BITPIX === undefined) {\n      throw new Error(\"BITPIX is not defined\");\n    }\n    const bytesXelem = Math.abs(this._BITPIX / 8);\n    const pxLength = this._u8data.byteLength / bytesXelem;\n    let px_val, ph_val;\n    let min = undefined;\n    let max = undefined;\n\n    if (this._BLANK !== undefined) {\n      this._physicalblank = this.pixel2physicalValue(this._BLANK);\n    }\n\n    while (i < pxLength) {\n      // px_val = this.extractPixelValue(bytesXelem*i);\n      px_val = this.extractPixelValue(bytesXelem * i);\n      if (px_val === undefined) {\n        i++;\n        continue;\n      }\n      ph_val = this.pixel2physicalValue(px_val);\n      if (min === undefined) {\n        min = ph_val;\n      }\n      if (max === undefined) {\n        max = ph_val;\n      }\n      //TODO check below if\n      if (this._physicalblank === undefined || this._physicalblank !== ph_val) {\n        if (ph_val !== undefined && (ph_val < min || min === undefined)) {\n          min = ph_val;\n        }\n\n        if (ph_val !== undefined && (ph_val > max || max === undefined)) {\n          max = ph_val;\n        }\n      }\n      i++;\n    }\n    return [min, max];\n  }\n\n  parse(): Array<Uint8Array> {\n    // let px_val; // pixel array value\n    // let ph_val = undefined; // pixel physical value\n    if (this._BITPIX === undefined) {\n      throw new Error(\"BITPIX is undefined\")\n    }\n    if (this._NAXIS1 === undefined) {\n      throw new Error(\"NAXIS1 is undefined\")\n    }\n    if (this._NAXIS2 === undefined) {\n      throw new Error(\"NAXIS2 is undefined\")\n    }\n    \n    const bytesXelem = Math.abs(this._BITPIX / 8);\n    let pxLength = this._u8data.byteLength / bytesXelem;\n    pxLength = this._NAXIS1 * this._NAXIS2;\n\n    let k = 0;\n    let c, r;\n    const pixelvalues = [];\n\n    //  let pixv, pv;\n    while (k < pxLength) {\n      r = Math.floor(k / this._NAXIS1); // row\n      c = (k - r * this._NAXIS1) * bytesXelem; // col\n      if (c === 0) {\n        pixelvalues[r] = new Uint8Array(this._NAXIS1 * bytesXelem);\n      }\n\n      // px_val = this.extractPixelValue(bytesXelem * k);\n      // ph_val = this.pixel2physicalValue(px_val);\n\n      // TODO check if ph_val == blank\n      // if not then use ph_val to compute datamin and datamax\n\n      for (let i = 0; i < bytesXelem; i++) {\n        pixelvalues[r][c + i] = this._u8data[k * bytesXelem + i];\n      }\n\n      // if (k == 232) {\n      // \tpixv = this.extractPixelValue(k * bytesXelem);\n      // \tpv = this._BZERO + this._BSCALE * pixv;\n      // }\n\n      k++;\n    }\n\n    return pixelvalues;\n  }\n\n  /** this can be deleted */\n  extractPixelValue(offset: number): number | undefined {\n    let px_val = undefined; // pixel value\n    if (this._BITPIX == 16) {\n      // 16-bit 2's complement binary integer\n      px_val = ParseUtils.parse16bit2sComplement(\n        this._u8data[offset],\n        this._u8data[offset + 1]\n      );\n    } else if (this._BITPIX == 32) {\n      // IEEE 754 half precision (float16) ??\n      px_val = ParseUtils.parse32bit2sComplement(\n        this._u8data[offset],\n        this._u8data[offset + 1],\n        this._u8data[offset + 2],\n        this._u8data[offset + 3]\n      );\n    } else if (this._BITPIX == -32) {\n      // 32-bit IEEE single-precision floating point\n      // px_val = ParseUtils.parse32bitSinglePrecisionFloatingPoint (this._u8data[offset], this._u8data[offset+1], this._u8data[offset+2], this._u8data[offset+3]);\n      px_val = ParseUtils.parseFloatingPointFormat(\n        this._u8data.slice(offset, offset + 4),\n        8,\n        23\n      );\n    } else if (this._BITPIX == 64) {\n      // 64-bit 2's complement binary integer\n      throw new Error(\n        \"BITPIX=64 -> 64-bit 2's complement binary integer NOT supported yet.\"\n      );\n    } else if (this._BITPIX == -64) {\n      // 64-bit IEEE double-precision floating point\n      //https://babbage.cs.qc.cuny.edu/ieee-754.old/Decimal.html\n      px_val = ParseUtils.parseFloatingPointFormat(\n        this._u8data.slice(offset, offset + 8),\n        11,\n        52\n      );\n    }\n\n    return px_val;\n  }\n\n  pixel2physicalValue(pxval: number): number{\n    if (this._BZERO === undefined || this._BSCALE === undefined) {\n      throw new Error(\"Either BZERO or BSCALE is undefined\");\n    }\n    return this._BZERO + this._BSCALE * pxval;\n    \n  }\n}\n","import { FITSHeader } from \"./model/FITSHeader.js\";\nimport { FITSHeaderItem } from \"./model/FITSHeaderItem.js\";\nimport { FITSHeaderLine } from \"./model/FITSHeaderLine.js\";\n/**\n * Summary. (bla bla bla)\n *\n * Description. (bla bla bla)\n *\n * @link   github https://github.com/fab77/FITSParser\n * @author Fabrizio Giordano <fabriziogiordano77@gmail.com>\n */\n\nexport class ParseHeader {\n  static parse(rawdata: Uint8Array): FITSHeader {\n    // only one header block (2880) allowed atm.\n    // TODO handle multiple header blocks\n    // let headerByteData = new Uint8Array(rawdata, 0, 2880);\n\n    const textDecoder = new TextDecoder(\"iso-8859-1\");\n\n    const header = new FITSHeader();\n\n    let nline = 0;\n    let key = \"\";\n    let val: string;\n\n    let u8line: Uint8Array;\n    let u8key: Uint8Array;\n    let u8val: Uint8Array;\n    let u8ind: Uint8Array;\n    // let ind: string;\n    let item: FITSHeaderItem | null;\n    let fitsLine: FITSHeaderLine;\n\n    item = null;\n\n    while (key !== \"END\" && rawdata.length > 0) {\n      // line 80 characters\n      u8line = new Uint8Array(rawdata.slice(nline * 80, nline * 80 + 80));\n      nline++;\n      // key\n      u8key = new Uint8Array(u8line.slice(0, 8));\n      key = textDecoder.decode(u8key).trim();\n      // value indicator\n      u8ind = new Uint8Array(u8line.slice(8, 10));\n      // ind = textDecoder.decode(u8ind);\n      // reading value\n      u8val = new Uint8Array(u8line.slice(10, 80));\n      val = textDecoder.decode(u8val).trim();\n      // ascii 61 -> =\n      // ascii 32 -> [space]\n      if (u8ind[0] == 61 && u8ind[1] == 32) {\n        let firstchar = 32;\n        for (let i = 0; i < u8val.length; i++) {\n          if (u8val[i] != 32) {\n            firstchar = u8val[i];\n            break;\n          }\n        }\n        // ascii 39 -> '\n        if (firstchar == 39 || !Number(val)) {\n          // [ival, icomment]\n          // fitsLine = ParseHeader.parseStringValue(u8val);\n          fitsLine = ParseHeader.parseLogicalValue(u8val);\n          \n        } else {\n          // ascii 84 -> T\n          // ascii 70 -> F\n          if (firstchar == 84 || firstchar == 70) {\n            // T or F\n            fitsLine = ParseHeader.parseLogicalValue(u8val);\n          } else {\n            val = textDecoder.decode(u8val).trim();\n            if (val.includes(\".\")) {\n              fitsLine = ParseHeader.parseFloatValue(u8val);\n            } else {\n              fitsLine = ParseHeader.parseIntValue(u8val);\n            }\n          }\n        }\n        item = new FITSHeaderItem(key, fitsLine.val, fitsLine.comment);\n      } else {\n        if (key == \"COMMENT\" || key == \"HISTORY\") {\n          item = new FITSHeaderItem(key, undefined, val);\n        } else {\n          let firstchar = 32;\n          for (let i = 0; i < u8val.length; i++) {\n            if (u8val[i] != 32) {\n              firstchar = u8val[i];\n              break;\n            }\n          }\n          if (firstchar == 47) {\n            // single / this is the case when no key nor value indicator is defined\n            item = new FITSHeaderItem(undefined, undefined, val);\n          } else if (firstchar == 32) {\n            // case when there's a line with only spaces\n            item = new FITSHeaderItem(undefined, undefined, undefined);\n          }\n        }\n      }\n      if (item != null) {\n        header.addItem(item);\n      }\n    }\n\n    item = new FITSHeaderItem(\n      \"COMMENT\",\n      \"FITS generated with FITSParser on \",\n      undefined\n    );\n    header.addItem(item);\n    const now = new Date();\n    item = new FITSHeaderItem(\"COMMENT\", now.toString());\n    header.addItem(item);\n\n    const nblock = Math.ceil(nline / 36);\n    const offset = nblock * 2880;\n\n    header.offset = offset;\n\n    return header;\n  }\n\n  static parseStringValue(u8buffer: Uint8Array): FITSHeaderLine {\n    const textDecoder = new TextDecoder(\"iso-8859-1\");\n    const decoded = textDecoder.decode(u8buffer).trim();\n    const idx = decoded.lastIndexOf(\"/\");\n    const val = decoded.substring(0, idx);\n    let comment = decoded.substring(idx);\n    // if (comment === undefined) {\n    //   comment = null;\n    // }\n    return {\n      val: val,\n      comment: comment,\n    };\n  }\n\n  static parseLogicalValue(u8buffer: Uint8Array): FITSHeaderLine {\n    const textDecoder = new TextDecoder(\"iso-8859-1\");\n    const val = textDecoder.decode(u8buffer).trim();\n    const tokens = val.split(\"/\");\n    if (tokens[1] === undefined) {\n      return {\n        val: tokens[0].trim(),\n        comment: undefined,\n      };\n    }\n    return {\n      val: tokens[0].trim(),\n      comment: \" /\" + tokens[1],\n    };\n  }\n\n  static parseIntValue(u8buffer: Uint8Array): FITSHeaderLine {\n    const textDecoder = new TextDecoder(\"iso-8859-1\");\n    const val = textDecoder.decode(u8buffer).trim();\n    const tokens = val.split(\"/\");\n    if (tokens[1] === undefined) {\n      return {\n        val: parseInt(tokens[0].trim()),\n        comment: undefined,\n      };\n    }\n    return {\n      val: parseInt(tokens[0].trim()),\n      comment: \" /\" + tokens[1],\n    };\n  }\n\n  static parseFloatValue(u8buffer: Uint8Array): FITSHeaderLine {\n    const textDecoder = new TextDecoder(\"iso-8859-1\");\n    const val = textDecoder.decode(u8buffer).trim();\n    const tokens = val.split(\"/\");\n    if (tokens[1] === undefined) {\n      return {\n        val: parseFloat(tokens[0].trim()),\n        comment: undefined,\n      };\n    }\n    return {\n      val: parseFloat(tokens[0].trim()),\n      comment: \" /\" + tokens[1],\n    };\n  }\n}\n","/**\n\n * @link   github https://github.com/fab77/FITSParser\n * @author Fabrizio Giordano <fabriziogiordano77@gmail.com>\n */\n\nimport { FITSWriter } from \"./FITSWriter.js\";\nimport { ParsePayload } from \"./ParsePayload.js\";\nimport { ParseHeader } from \"./ParseHeader.js\";\nimport { FITSHeader } from \"./model/FITSHeader.js\";\nimport { FITSParsed } from \"./model/FITSParsed.js\";\n// import fetch from 'cross-fetch';\n// import { readFile } from \"node:fs/promises\";\n\nexport class FITSParser {\n  _url: string;\n\n  constructor(url: string) {\n    this._url = url;\n  }\n\n  async loadFITS(): Promise<FITSParsed | null> {\n    return this.getFile(this._url)\n      .then((rawdata) => {\n        if (rawdata !== null && rawdata.byteLength > 0) {\n          const uint8 = new Uint8Array(rawdata);\n          const fits = this.processFits(uint8);\n          return fits;\n        }\n        return null;\n      })\n      .catch((error) => {\n        if (error?.response?.data?.message) {\n          throw new Error(\n            \"[FITSParser->loadFITS] \" + error.response.data.message\n          );\n        }\n        throw error;\n      });\n  }\n\n  processFits(rawdata: Uint8Array): FITSParsed {\n    const header: FITSHeader = ParseHeader.parse(rawdata);\n\n    const payloadParser = new ParsePayload(header, rawdata);\n    const pixelvalues = payloadParser.parse();\n    // if (rawdata.length > (header.getNumRows() + (pixelvalues.length * pixelvalues[0].length))) {\n    // let leftover = rawdata.length - (header.getNumRows() + (pixelvalues.length * pixelvalues[0].length));\n    // \tthrow new Error(\"[FITSParser->processFits] It seems that there's at least one more HDU since there are \" + leftover + \" bytes not processed.\");\n    // \tconsole.warn(\"It seems that there's at least one more HDU since there are \" + leftover + \" bytes not processed.\")\n    // }\n    return {\n      header: header,\n      data: pixelvalues,\n    };\n  }\n\n  static generateFITS(header: FITSHeader, rawdata: Uint8Array[]) {\n    const writer = new FITSWriter();\n    writer.run(header, rawdata);\n    return writer.typedArrayToURL();\n  }\n\n  async getFile(uri: string): Promise<Buffer | ArrayBuffer> {\n\n    let data;\n    if (!uri.substring(0, 5).toLowerCase().includes(\"http\")) {\n\n      let p = await import('./getLocalFile.js')\n      // data = await p.getLocalFile(uri);\n      return await p.getLocalFile(uri);\n\n    } else {\n\n      let p = await import('./getFile.js')\n\n      return p.getFile(uri).then((data) => {\n        return data;\n      }).catch((err) => {\n        // console.error(\"Error in FITSParser getFile \", uri, err);\n        return null;\n      });\n      // data = await p.getFile(uri);\n      // return await p.getFile(uri).catch((err) => {\n      //   console.error(err);\n      // });\n\n    }\n    // return data;\n\n  }\n\n\n}\n"],"names":["root","factory","exports","module","define","amd","self","inProgress","dataWebpackPrefix","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call","m","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","l","url","done","push","script","needAttach","scripts","document","getElementsByTagName","i","length","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","forEach","fn","setTimeout","bind","type","target","head","appendChild","r","Symbol","toStringTag","value","scriptUrl","importScripts","location","currentScript","test","Error","replace","p","installedChunks","j","installedChunkData","promise","resolve","reject","error","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","id","chunkLoadingGlobal","FITSHeaderItem","constructor","comment","_key","_value","_comment","FITSHeader","Map","super","_offset","_items","offset","getItemList","getItemListOf","res","item","addItemAtTheBeginning","includes","set","newitemlist","concat","addItem","getNumRows","ParseUtils","getStringAt","chars","String","fromCharCode","charCodeAt","join","byteString","toString","substr","parse32bitSinglePrecisionFloatingPoint","byte1","byte2","byte3","byte4","long","Math","pow","convertBlankToBytes","blank","nbytes","str","abs","buffer","ArrayBuffer","uint8","Uint8Array","parseInt","parseFloatingPointFormat","bytes","ebits","fbits","bits","byte","reverse","bias","substring","Infinity","generate16bit2sComplement","val","TypeError","parse16bit2sComplement","unsigned","parse32bit2sComplement","getByteAt","extractPixelValue","bitpix","px_val","slice","FITSWriter","_headerArray","_payloadArray","Array","_fitsData","run","header","rawdata","prepareHeader","prepareFITS","headerDetails","formatHeaderLine","strBytelen","TextEncoder","encode","ceil","ab","keyword","len","typedArrayToURL","b","Blob","URL","createObjectURL","ParsePayload","fitsheader","_u8data","_BZERO","_BSCALE","_BLANK","_BITPIX","_NAXIS1","_NAXIS2","_DATAMIN","_DATAMAX","_physicalblank","init","min","max","computePhysicalMinAndMax","maxitem","minitem","bytesXelem","pxLength","byteLength","ph_val","pixel2physicalValue","parse","c","k","pixelvalues","floor","pxval","ParseHeader","textDecoder","TextDecoder","u8line","u8key","u8val","u8ind","fitsLine","nline","decode","trim","firstchar","Number","parseLogicalValue","parseFloatValue","parseIntValue","now","Date","parseStringValue","u8buffer","decoded","idx","lastIndexOf","tokens","split","parseFloat","FITSParser","_url","loadFITS","getFile","then","processFits","catch","response","generateFITS","writer","uri","toLowerCase","err","getLocalFile"],"sourceRoot":""}