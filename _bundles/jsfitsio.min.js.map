{"version":3,"file":"jsfitsio.min.js","mappings":"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","sources":["webpack://jsfitsio/webpack/universalModuleDefinition","webpack://jsfitsio/webpack/runtime/load script","webpack://jsfitsio/webpack/bootstrap","webpack://jsfitsio/webpack/runtime/compat get default export","webpack://jsfitsio/webpack/runtime/define property getters","webpack://jsfitsio/webpack/runtime/ensure chunk","webpack://jsfitsio/webpack/runtime/get javascript chunk filename","webpack://jsfitsio/webpack/runtime/global","webpack://jsfitsio/webpack/runtime/hasOwnProperty shorthand","webpack://jsfitsio/webpack/runtime/make namespace object","webpack://jsfitsio/webpack/runtime/publicPath","webpack://jsfitsio/webpack/runtime/jsonp chunk loading","webpack://jsfitsio/./src/model/FITSHeaderItem.ts","webpack://jsfitsio/./src/model/FITSHeader.ts","webpack://jsfitsio/./src/FITSWriter.ts","webpack://jsfitsio/./src/ParseUtils.ts","webpack://jsfitsio/./src/ParsePayload.ts","webpack://jsfitsio/./src/ParseHeader.ts","webpack://jsfitsio/./src/FITSParser.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"jsfitsio\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jsfitsio\"] = factory();\n\telse\n\t\troot[\"jsfitsio\"] = factory();\n})(self, () => {\nreturn ","var inProgress = {};\nvar dataWebpackPrefix = \"jsfitsio:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js?h=\" + {\"483\":\"4ee9deba607a06728e4e\",\"646\":\"d4f6e6f7b6ca73e7f890\"}[chunkId] + \"\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t924: 0,\n\t202: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkjsfitsio\"] = self[\"webpackChunkjsfitsio\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","/**\n * Summary. (bla bla bla)\n *\n * Description. (bla bla bla)\n *\n * @link   github https://github.com/fab77/FITSParser\n * @author Fabrizio Giordano <fabriziogiordano77@gmail.com>\n */\n\nexport class FITSHeaderItem {\n  _key: string | undefined;\n  _value: string | number | undefined;\n  _comment: string | undefined;\n\n  constructor(key?: string, value?: string | number, comment?: string) {\n    this._key = key\n    this._value = value ? value : null;\n    this._comment = comment ? comment : null;\n  }\n\n  get key() {\n    return this._key;\n  }\n\n  get comment() {\n    return this._comment;\n  }\n\n  get value() {\n    return this._value;\n  }\n}\n","import { FITSHeaderItem } from \"./FITSHeaderItem.js\";\n\n/**\n * Summary. (bla bla bla)\n *\n * Description. (bla bla bla)\n *\n * @link   github https://github.com/fab77/FITSParser\n * @author Fabrizio Giordano <fabriziogiordano77@gmail.com>\n */\n\n// reference FTIS standard doc https://heasarc.gsfc.nasa.gov/docs/fcg/standard_dict.html\n\nexport class FITSHeader extends Map {\n  _offset: number | undefined;\n  _items: FITSHeaderItem[];\n\n  constructor() {\n    super();\n    this._offset = undefined;\n    this._items = [];\n  }\n\n  set offset(offset) {\n    this._offset = offset;\n  }\n\n  get offset() {\n    return this._offset;\n  }\n\n  getItemList() {\n    return this._items;\n  }\n\n  getItemListOf(key: string) {\n    const res = [];\n    for (let i = 0; i < this._items.length; i++) {\n      const item = this._items[i];\n      if (item.key == key) {\n        res.push(item);\n      }\n    }\n    return res;\n  }\n\n  addItemAtTheBeginning(item: FITSHeaderItem) {\n    if (item.key !== undefined) {\n      if (\n        [\n          \"SIMPLE\",\n          \"BITPIX\",\n          \"NAXIS\",\n          \"NAXIS1\",\n          \"NAXIS2\",\n          \"BLANK\",\n          \"BZERO\",\n          \"BSCALE\",\n          \"DATAMIN\",\n          \"DATAMAX\",\n          \"NPIX\",\n          \"ORDER\",\n          \"CRPIX1\",\n          \"CRPIX2\",\n          \"CDELT1\",\n          \"CDELT2\",\n          \"CRVAL1\",\n          \"CRVAL2\",\n        ].includes(item.key)\n      ) {\n        this.set(item.key, item.value);\n      }\n    }\n    \n    const newitemlist = [item].concat(this._items);\n    this._items = newitemlist;\n  }\n\n\n\n  addItem(item: FITSHeaderItem) {\n    if (item.key !== undefined) {\n      if (\n        [\n          \"SIMPLE\",\n          \"BITPIX\",\n          \"NAXIS\",\n          \"NAXIS1\",\n          \"NAXIS2\",\n          \"BLANK\",\n          \"BZERO\",\n          \"BSCALE\",\n          \"DATAMIN\",\n          \"DATAMAX\",\n          \"NPIX\",\n          \"ORDER\",\n          \"CRPIX1\",\n          \"CRPIX2\",\n          \"CDELT1\",\n          \"CDELT2\",\n          \"CRVAL1\",\n          \"CRVAL2\",\n        ].includes(item.key)\n      ) {\n        this.set(item.key, item.value);\n      }\n    }\n    this._items.push(item);\n  }\n\n  getNumRows() {\n    return this._items.length;\n  }\n}\n","/**\n * Summary. (bla bla bla)\n *\n * Description. (bla bla bla)\n *\n * @link   github https://github.com/fab77/fitsontheweb\n * @author Fabrizio Giordano <fabriziogiordano77@gmail.com>\n * import GnomonicProjection from './GnomonicProjection';\n * BITPIX definition from https://archive.stsci.edu/fits/fits_standard/node39.html\n * and \"Definition of the Flexible Image Transport System (FITS)\" standard document\n * defined by FITS Working Group from the International Astronomical Union\n * http://fits.gsfc.nasa.gov/iaufwg/\n * 8\t8-bit Character or unsigned binary integer\n * 16\t16-bit twos-complement binary integer\n * 32\t32-bit twos-complement binary integer\n * -32\t32-bit IEEE single precision floating point\n * -64\t64-bit IEEE double precision floating point\n *\n */\nimport { FITSParsed } from \"./model/FITSParsed.js\"\nimport { FITSHeader } from \"./model/FITSHeader.js\"\nimport * as fs from 'fs';\n\n\nexport class FITSWriter {\n\n  static createFITS(fitsParsed: FITSParsed): Uint8Array {\n    const headerBytes = this.createHeader(fitsParsed.header);\n    const dataBytes = this.createData(fitsParsed.data);\n    \n    // Concatenate header and data to form a complete FITS file\n    const fitsFile = new Uint8Array(headerBytes.length + dataBytes.length);\n    fitsFile.set(headerBytes, 0);\n    fitsFile.set(dataBytes, headerBytes.length);\n\n    return fitsFile;\n  }\n\n  private static createHeader(header: FITSHeader): Uint8Array {\n    let headerString = \"\";\n\n    // Convert header items to FITS 80-character records\n    for (const item of header.getItemList()) {\n      const key = item.key ? item.key.padEnd(8, \" \") : \"        \";\n      const value = item.value !== undefined ? `= ${item.value}` : \"\";\n      const comment = item.comment ? ` / ${item.comment}` : \"\";\n      let record = `${key}${value}${comment}`.padEnd(80, \" \");\n      headerString += record;\n    }\n\n    // End header with \"END\" record and pad to 2880-byte multiple\n    headerString += \"END\".padEnd(80, \" \");\n    while (headerString.length % 2880 !== 0) {\n      headerString += \" \";\n    }\n\n    return new TextEncoder().encode(headerString);\n  }\n\n  private static createData(data: Array<Uint8Array>): Uint8Array {\n    // Concatenate all data rows into a single Uint8Array\n    let totalLength = data.reduce((sum, row) => sum + row.length, 0);\n    let dataBytes = new Uint8Array(totalLength);\n    \n    let offset = 0;\n    for (let row of data) {\n      dataBytes.set(row, offset);\n      offset += row.length;\n    }\n\n    // Ensure data section is a multiple of 2880 bytes\n    let paddingSize = (2880 - (dataBytes.length % 2880)) % 2880;\n    if (paddingSize > 0) {\n      let paddedData = new Uint8Array(dataBytes.length + paddingSize);\n      paddedData.set(dataBytes);\n      return paddedData;\n    }\n\n    return dataBytes;\n  }\n\n  static typedArrayToURL(fitsParsed: FITSParsed): string {\n    const fitsFile = this.createFITS(fitsParsed);\n    const blob = new Blob([fitsFile], { type: \"application/fits\" });\n    // console.log(`<html><body><img src='${URL.createObjectURL(b)}'</body></html>`);\n    const url = URL.createObjectURL(blob);\n    console.log(`Generated FITS file URL: ${url}`);\n    const revokeTimeout_sec = 10\n    setTimeout(() => url, revokeTimeout_sec * 1000);\n    console.log(`Generated FITS will be available for ${revokeTimeout_sec} seconds: ${url}`);\n    return url;\n  }\n\n  static writeFITSFile(fitsParsed: FITSParsed, filePath: string): void {\n    const fitsFile = this.createFITS(fitsParsed);\n\n    try {\n      fs.writeFileSync(filePath, fitsFile);\n      console.log(`FITS file written successfully to: ${filePath}`);\n    } catch (error) {\n      console.error(`Error writing FITS file: ${error}`);\n    }\n  }\n\n}\n\n// const fitsParsed: FITSParsed = {\n//   header: new FITSHeader(),\n//   data: [new Uint8Array([1, 2, 3]), new Uint8Array([4, 5, 6])]\n// };\n\n// // Specify the file path\n// const filePath = \"/Users/fabriziogiordano/Desktop/PhD/code/new/FITSParser/output.fits\";\n\n// // Write the FITS file to the filesystem\n// FITSWriter.writeFITSFile(fitsParsed, filePath);","/**\n * Summary. (bla bla bla)\n *\n * Description. (bla bla bla)\n *\n * @link   github https://github.com/fab77/FITSParser\n * @author Fabrizio Giordano <fabriziogiordano77@gmail.com>\n */\n\nexport class ParseUtils {\n  static getStringAt(data: string, offset: number, length: number) {\n    const chars: string[] = [];\n    for (let i = offset, j = 0; i < offset + length; i++, j++) {\n      chars[j] = String.fromCharCode(data.charCodeAt(i) & 0xff);\n    }\n    return chars.join(\"\");\n  }\n\n  static byteString(n: number): string {\n    if (n < 0 || n > 255 || n % 1 !== 0) {\n      throw new Error(n + \" does not fit in a byte\");\n    }\n    return (\"000000000\" + n.toString(2)).substr(-8);\n  }\n\n  static parse32bitSinglePrecisionFloatingPoint(\n    byte1: number,\n    byte2: number,\n    byte3: number,\n    byte4: number\n  ): number {\n    let long = (((((byte1 << 8) + byte2) << 8) + byte3) << 8) + byte4;\n    if (long < 0) long += 4294967296;\n    const float =\n      (1.0 + (long & 0x007fffff) / 0x0800000) *\n      Math.pow(2, ((long & 0x7f800000) >> 23) - 127);\n    return float;\n  }\n\n  static convertBlankToBytes(blank: number, nbytes: number): Uint8Array {\n    let str = Math.abs(blank).toString(2);\n    while (str.length / 8 < nbytes) {\n      str += \"0\";\n    }\n    const buffer = new ArrayBuffer(nbytes);\n    const uint8 = new Uint8Array(buffer);\n    for (let i = 0; i < nbytes; i++) {\n      uint8[i] = parseInt(str.substr(8 * i, 8 * (i + 1)), 2);\n    }\n    return uint8;\n  }\n  /** https://gist.github.com/Manouchehri/f4b41c8272db2d6423fa987e844dd9ac */\n  static parseFloatingPointFormat(\n    bytes: Uint8Array,\n    ebits: number,\n    fbits: number\n  ): number | undefined {\n    // Bytes to bits\n    const bits = [];\n    for (let i = bytes.length; i; i -= 1) {\n      let byte = bytes[i - 1];\n      for (let j = 8; j; j -= 1) {\n        bits.push(byte % 2 ? 1 : 0);\n        byte = byte >> 1;\n      }\n    }\n    bits.reverse();\n    const str = bits.join(\"\");\n    // Unpack sign, exponent, fraction\n    const bias = (1 << (ebits - 1)) - 1;\n    const s = parseInt(str.substring(0, 1), 2) ? -1 : 1;\n    const e = parseInt(str.substring(1, 1 + ebits), 2);\n    const f = parseInt(str.substring(1 + ebits), 2);\n\n    // Produce number\n    if (e === (1 << ebits) - 1) {\n      return f !== 0 ? undefined : s * Infinity;\n    } else if (e > 0) {\n      return s * Math.pow(2, e - bias) * (1 + f / Math.pow(2, fbits));\n    } else if (f !== 0) {\n      return s * Math.pow(2, -(bias - 1)) * (f / Math.pow(2, fbits));\n    } else {\n      return s * 0;\n    }\n  }\n\n  static generate16bit2sComplement(val: number): number {\n    throw new TypeError(\"not implemented yet\" + val);\n  }\n\n  static parse16bit2sComplement(byte1: number, byte2: number): number {\n    const unsigned = (byte1 << 8) | byte2;\n    if (unsigned & 0x8000) {\n      return unsigned | 0xffff0000;\n    } else {\n      return unsigned;\n    }\n  }\n\n  static parse32bit2sComplement(\n    byte1: number,\n    byte2: number,\n    byte3: number,\n    byte4: number\n  ): number {\n    const unsigned = (byte1 << 24) | (byte2 << 16) | (byte3 << 8) | byte4;\n    const s = (unsigned & 0x80000000) >> 31;\n    let res = unsigned & 0xffffffff;\n\n    if (s) {\n      res = (~unsigned & 0xffffffff) + 1;\n      return -1 * res;\n    }\n    return res;\n  }\n\n  /**\n   *\n   * @param {*} data string?\n   * @param {*} offset offset in the data\n   * @returns returns an integer between 0 and 65535 representing the UTF-16 code unit at the given index.\n   */\n  static getByteAt(data: string, offset: number): number {\n    const dataOffset = 0;\n    return data.charCodeAt(offset + dataOffset) & 0xff;\n  }\n\n  static extractPixelValue(\n    offset: number,\n    bytes: Uint8Array,\n    bitpix: number\n  ): number | undefined {\n    let px_val = undefined; // pixel value\n    // let px_val1, px_val2, px_val3, px_val4;\n\n    if (bitpix == 8){\n      px_val = bytes[0]\n    } else if (bitpix == 16) {\n      // 16-bit 2's complement binary integer\n      px_val = ParseUtils.parse16bit2sComplement(\n        bytes[offset],\n        bytes[offset + 1]\n      );\n    } else if (bitpix == 32) {\n      // IEEE 754 half precision (float16) ??\n      px_val = ParseUtils.parse32bit2sComplement(\n        bytes[offset],\n        bytes[offset + 1],\n        bytes[offset + 2],\n        bytes[offset + 3]\n      );\n    } else if (bitpix == -32) {\n      // 32-bit IEEE single-precision floating point\n      // px_val = ParseUtils.parse32bitSinglePrecisionFloatingPoint (this._u8data[offset], this._u8data[offset+1], this._u8data[offset+2], this._u8data[offset+3]);\n      px_val = ParseUtils.parseFloatingPointFormat(\n        bytes.slice(offset, offset + 8),\n        8,\n        23\n      );\n    } else if (bitpix == 64) {\n      // 64-bit 2's complement binary integer\n      throw new Error(\n        \"BITPIX=64 -> 64-bit 2's complement binary integer NOT supported yet.\"\n      );\n    } else if (bitpix == -64) {\n      // 64-bit IEEE double-precision floating point\n      //https://babbage.cs.qc.cuny.edu/ieee-754.old/Decimal.html\n      px_val = ParseUtils.parseFloatingPointFormat(\n        bytes.slice(offset, offset + 8),\n        11,\n        52\n      );\n    }\n\n    return px_val;\n  }\n\n}\n\n// export default ParseUtils;\n","// \"use strict\";\n\n/**\n * Summary. (bla bla bla)\n *\n * Description. (bla bla bla)\n *\n * @link   github https://github.com/fab77/FITSParser\n * @author Fabrizio Giordano <fabriziogiordano77@gmail.com>\n */\nimport { FITSHeader } from \"./model/FITSHeader.js\";\nimport { FITSHeaderItem } from \"./model/FITSHeaderItem.js\";\nimport { ParseUtils } from \"./ParseUtils.js\";\n\nexport class ParsePayload {\n  \n  static computePhysicalMinAndMax(header: FITSHeader, rawData: Uint8Array){\n  \n    const BITPIX: number = header.get(\"BITPIX\") ?? null;\n    const NAXIS1: number = header.get(\"NAXIS1\") ?? null;\n    const NAXIS2: number = header.get(\"NAXIS2\") ?? null;\n    const DATAMIN: number = header.get(\"DATAMIN\") ?? null;\n    const DATAMAX: number = header.get(\"DATAMAX\") ?? null;\n    \n    if (!BITPIX || !NAXIS1 || !NAXIS2) {\n      return null\n    }\n\n    if (!DATAMAX || !DATAMIN) {\n      \n      const [DATAMIN, DATAMAX] = ParsePayload.computePhysicalValues(rawData, header);\n      if (DATAMIN && DATAMAX) {\n        const maxitem = new FITSHeaderItem(\n          \"DATAMAX\",\n          DATAMAX,\n          \"computed by jsfitsio\"\n        );\n        const minitem = new FITSHeaderItem(\n          \"DATAMIN\",\n          DATAMIN,\n          \"computed by jsfitsio\"\n        );\n        header.addItem(maxitem);\n        header.addItem(minitem);\n      }\n    }\n\n    const endItem = new FITSHeaderItem('END', null, null);\n    header.addItem(endItem)\n    return header\n    // TODO: END tag shall be added here\n  }\n\n  static computePhysicalValues(rawData: Uint8Array, header: FITSHeader): [number | undefined, number | undefined] {\n    \n    const BITPIX: number = header.get(\"BITPIX\")\n    const BLANK: number = header.get(\"BLANK\")\n    const BZERO: number = header.get(\"BZERO\") ? header.get(\"BZERO\") : 0;\n    const BSCALE: number = header.get(\"BSCALE\") ? header.get(\"BSCALE\") : 1;\n    let i = 0;\n    \n    const bytesXelem = Math.abs(BITPIX / 8);\n    const pxLength = rawData.byteLength / bytesXelem;\n\n    let min = null;\n    let max = null;\n    let physicalblank = null\n\n    if (BLANK) {\n      physicalblank = ParsePayload.pixel2physicalValue(BLANK, BSCALE, BZERO);\n    }\n    \n    while (i < pxLength) {\n      let px_val = ParsePayload.extractPixelValue(rawData, bytesXelem * i, BITPIX);\n      if (px_val === null) {\n        i++;\n        continue;\n      }\n      let ph_val = ParsePayload.pixel2physicalValue(px_val, BSCALE, BZERO);\n      if (!min) {\n        min = ph_val;\n      }\n      if (!max) {\n        max = ph_val;\n      }\n\n      // check this block if it is still applicable\n      if (physicalblank === null || physicalblank !== ph_val) {\n        if (ph_val !== null && (ph_val < min || min === null)) {\n          min = ph_val;\n        }\n\n        if (ph_val !== null && (ph_val > max || max === null)) {\n          max = ph_val;\n        }\n      }\n      i++;\n    }\n    return [min, max];\n  }\n\n  static pixel2physicalValue(pxval: number, BSCALE:number, BZERO: number): number{\n    if (BZERO === null || BSCALE === null) {\n      throw new Error(\"Either BZERO or BSCALE is undefined\");\n    }\n    return BZERO + BSCALE * pxval;\n    \n  }\n\n  static extractPixelValue(rawData: Uint8Array, offset: number, BITPIX: number): number | undefined {\n    let px_val = null; // pixel value\n    if (BITPIX == 16) {\n      // 16-bit 2's complement binary integer\n      px_val = ParseUtils.parse16bit2sComplement(\n        rawData[offset],\n        rawData[offset + 1]\n      );\n    } else if (BITPIX == 32) {\n      // IEEE 754 half precision (float16) ??\n      px_val = ParseUtils.parse32bit2sComplement(\n        rawData[offset],\n        rawData[offset + 1],\n        rawData[offset + 2],\n        rawData[offset + 3]\n      );\n    } else if (BITPIX == -32) {\n      // 32-bit IEEE single-precision floating point\n      // px_val = ParseUtils.parse32bitSinglePrecisionFloatingPoint (this._u8data[offset], this._u8data[offset+1], this._u8data[offset+2], this._u8data[offset+3]);\n      px_val = ParseUtils.parseFloatingPointFormat(\n        rawData.slice(offset, offset + 4),\n        8,\n        23\n      );\n    } else if (BITPIX == 64) {\n      // 64-bit 2's complement binary integer\n      throw new Error(\n        \"BITPIX=64 -> 64-bit 2's complement binary integer NOT supported yet.\"\n      );\n    } else if (BITPIX == -64) {\n      // 64-bit IEEE double-precision floating point\n      //https://babbage.cs.qc.cuny.edu/ieee-754.old/Decimal.html\n      px_val = ParseUtils.parseFloatingPointFormat(\n        rawData.slice(offset, offset + 8),\n        11,\n        52\n      );\n    }\n\n    return px_val;\n  }\n\n}\n","import { FITSHeader } from \"./model/FITSHeader.js\";\nimport { FITSHeaderItem } from \"./model/FITSHeaderItem.js\";\n/**\n * Summary. (bla bla bla)\n *\n * Description. (bla bla bla)\n *\n * @link   github https://github.com/fab77/FITSParser\n * @author Fabrizio Giordano <fabriziogiordano77@gmail.com>\n */\n\nexport class ParseHeader {\n  static parse(rawdata: Uint8Array): FITSHeader {\n    // only one header block (2880) allowed atm.\n    // TODO handle multiple header blocks\n    // let headerByteData = new Uint8Array(rawdata, 0, 2880);\n\n    const textDecoder = new TextDecoder('ascii');\n    const headerSize = 2880; // FITS headers are in 2880-byte blocks\n    const headerText = textDecoder.decode(rawdata.slice(0, headerSize));\n\n    const header:FITSHeader = new FITSHeader();\n    const lines = headerText.match(/.{1,80}/g) || [];\n    for (const line of lines) {\n\n      const key = line.slice(0, 8).trim();\n      let value = null\n      let comment = null\n\n      if (key && key !== 'END') {\n        const rawValue = line.slice(10).trim().split('/')[0].trim();\n        value = isNaN(Number(rawValue)) ? rawValue : Number(rawValue);\n        if (line.includes('/')) {\n          comment = line.slice(10).trim().split('/')[1].trim();\n        }\n        \n        const item = new FITSHeaderItem(key, value, comment);\n        if (key == 'SIMPLE') {\n          header.addItemAtTheBeginning(item)\n        } else {\n          header.addItem(item)\n        }\n      }     \n\n      \n\n      \n\n    }\n\n    return header;\n  }\n\n}\n","/**\n\n * @link   github https://github.com/fab77/FITSParser\n * @author Fabrizio Giordano <fabriziogiordano77@gmail.com>\n */\n\nimport { FITSWriter } from \"./FITSWriter.js\";\nimport { ParsePayload } from \"./ParsePayload.js\";\nimport { ParseHeader } from \"./ParseHeader.js\";\nimport { FITSHeader } from \"./model/FITSHeader.js\";\nimport { FITSParsed } from \"./model/FITSParsed.js\";\n// import fetch from 'cross-fetch';\n// import { readFile } from \"node:fs/promises\";\n\nexport class FITSParser {\n  \n\n  static async loadFITS(url: string): Promise<FITSParsed | null> {\n    const uint8data = await FITSParser.getFile(url)\n    if (uint8data?.byteLength) {\n      const fits = FITSParser.processFits(uint8data);\n      return fits;\n    }\n    return null;\n  }\n\n  private static processFits(rawdata: Uint8Array): FITSParsed {\n\n    const header: FITSHeader = ParseHeader.parse(rawdata);\n\n    const headerFinalised = ParsePayload.computePhysicalMinAndMax(header, rawdata);\n\n    if (headerFinalised == null) {\n      return null\n    }\n\n    const dataOffset = 2880; // Assuming no additional header blocks\n    const payloadBuffer = new Uint8Array(rawdata.slice(dataOffset));\n    const payloadMatrix = FITSParser.createMatrix(payloadBuffer, header)\n\n    return {\n      header: headerFinalised,\n      data: payloadMatrix\n    };\n  }\n\n  private static createMatrix(payload: Uint8Array, header: FITSHeader): Array<Uint8Array> {\n    const NAXIS1 = header.get(\"NAXIS1\")\n    const NAXIS2 = header.get(\"NAXIS2\")\n    const BITPIX = header.get(\"BITPIX\")\n    const bytesXelem = Math.abs(BITPIX / 8);\n\n    if (payload.length !== NAXIS1 * NAXIS2 * bytesXelem) {\n      throw new Error(\"Payload size does not match the expected matrix dimensions.\");\n    }\n\n    const matrix: Array<Uint8Array> = [];\n    for (let i = 0; i < NAXIS2; i++) {\n      matrix.push(payload.slice(i * NAXIS1 * bytesXelem, (i + 1) * NAXIS1 * bytesXelem));\n    }\n\n    return matrix;\n  }\n\n\n\n  static generateFITSForWeb(fitsParsed: FITSParsed) {\n    return FITSWriter.typedArrayToURL(fitsParsed)\n  }\n\n  static saveFITSLocally(fitsParsed: FITSParsed, path: string) {\n    return FITSWriter.writeFITSFile(fitsParsed, path)\n  }\n\n  private static async getFile(uri: string): Promise<Uint8Array> {\n\n    if (!uri.substring(0, 5).toLowerCase().includes(\"http\")) {\n\n      const p = await import('./getLocalFile.js')\n      const rawData = await p.getLocalFile(uri);\n      const uint8 = new Uint8Array(rawData);\n      return uint8\n\n    } else {\n\n      const p = await import('./getFile.js')\n      const rawData = await p.getFile(uri)\n      const uint8 = new Uint8Array(rawData);\n      return uint8\n\n    }\n\n  }\n\n\n}\n\nconst url = \"http://skies.esac.esa.int/Herschel/normalized/PACS_hips160//Norder8/Dir40000/Npix47180.fits\"\nFITSParser.loadFITS(url).then((fits) => {\n  if (fits == null) {\n    return null\n  }\n  const path = \"./fitsTest1.fits\"\n  console.log(fits.header)\n  FITSParser.saveFITSLocally(fits, path)\n  console.log(\"finished\")\n})\n\n// const file = \"/Users/fabriziogiordano/Desktop/PhD/code/new/FITSParser/tests/inputs/empty.fits\"\nconst file = \"/Users/fabriziogiordano/Desktop/PhD/code/new/FITSParser/tests/inputs/Npix43348.fits\"\nFITSParser.loadFITS(file).then((fits) => {\n  if (fits == null) {\n    return null\n  }\n  const path = \"./fitsTest2.fits\"\n  console.log(fits.header)\n  FITSParser.saveFITSLocally(fits, path)\n  console.log(\"finished\")\n})\n\n"],"names":["root","factory","exports","module","define","amd","self","inProgress","dataWebpackPrefix","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call","m","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","l","url","done","push","script","needAttach","scripts","document","getElementsByTagName","i","length","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","forEach","fn","setTimeout","bind","type","target","head","appendChild","r","Symbol","toStringTag","value","scriptUrl","importScripts","location","currentScript","test","Error","replace","p","installedChunks","j","installedChunkData","promise","resolve","reject","error","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","id","chunkLoadingGlobal","FITSHeaderItem","constructor","comment","_key","_value","_comment","FITSHeader","Map","super","_offset","_items","offset","getItemList","getItemListOf","res","item","addItemAtTheBeginning","includes","set","newitemlist","concat","addItem","getNumRows","FITSWriter","createFITS","fitsParsed","headerBytes","createHeader","header","dataBytes","createData","fitsFile","Uint8Array","headerString","padEnd","TextEncoder","encode","totalLength","sum","row","paddingSize","paddedData","typedArrayToURL","blob","Blob","URL","createObjectURL","console","log","revokeTimeout_sec","writeFITSFile","filePath","ParseUtils","getStringAt","chars","String","fromCharCode","charCodeAt","join","byteString","toString","substr","parse32bitSinglePrecisionFloatingPoint","byte1","byte2","byte3","byte4","long","Math","pow","convertBlankToBytes","blank","nbytes","str","abs","buffer","ArrayBuffer","uint8","parseInt","parseFloatingPointFormat","bytes","ebits","fbits","bits","byte","reverse","bias","substring","Infinity","generate16bit2sComplement","val","TypeError","parse16bit2sComplement","unsigned","parse32bit2sComplement","getByteAt","extractPixelValue","bitpix","px_val","slice","ParsePayload","computePhysicalMinAndMax","rawData","BITPIX","NAXIS1","NAXIS2","DATAMIN","DATAMAX","computePhysicalValues","maxitem","minitem","endItem","BLANK","BZERO","BSCALE","bytesXelem","pxLength","byteLength","min","max","physicalblank","pixel2physicalValue","ph_val","pxval","ParseHeader","parse","rawdata","headerText","TextDecoder","decode","lines","match","line","trim","rawValue","split","isNaN","Number","FITSParser","loadFITS","uint8data","getFile","processFits","headerFinalised","payloadBuffer","createMatrix","payload","matrix","generateFITSForWeb","saveFITSLocally","path","uri","toLowerCase","getLocalFile","then","fits"],"sourceRoot":""}