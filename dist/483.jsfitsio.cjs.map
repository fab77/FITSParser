{"version":3,"file":"483.jsfitsio.cjs","mappings":";;;;;;;;;;;;;;AAA4C;AAC5C,2BAA2B;AAC3B,qCAAqC;AAErC,qDAAqD;AACrD,8CAA8C;AAEvC,KAAK,UAAU,YAAY,CAAC,IAAW;IAC1C,sBAAsB;IACtB,IAAI,CAAC;QACD,MAAM,QAAQ,GAAW,MAAM,0DAAQ,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,QAAQ,EAAE,CAAC;YACX,OAAO,QAAQ,CAAC;QACpB,CAAC;aAAM,CAAC;YACJ,OAAO,IAAI,CAAC;QAChB,CAAC;QACD,iCAAiC;IAErC,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACjB,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;QAC/D,OAAO,IAAI,CAAC;IACd,CAAC;AAEH,CAAC","sources":["webpack://jsfitsio/./src/getLocalFile.ts"],"sourcesContent":["import { readFile } from \"node:fs/promises\";\n// import path from 'path';\n// import {fileURLToPath} from 'url';\n\n// const __filename = fileURLToPath(import.meta.url);\n// const __dirname = path.dirname(__filename);\n\nexport async function getLocalFile(path:string) {\n    // let buffer: Buffer;\n    try {\n        const response: Buffer = await readFile(path);\n        if (response) {\n            return response;\n        } else {\n            return null;\n        }\n        // buffer = await readFile(path);\n        \n    } catch (error) {\n    console.error(\"Failed to read path:\", path, \"\\nError:\", error);\n    return null;\n  }\n    \n}\n"],"names":[],"sourceRoot":""}